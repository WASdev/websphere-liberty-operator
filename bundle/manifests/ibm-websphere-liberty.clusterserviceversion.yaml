apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "liberty.websphere.ibm.com/v1",
          "kind": "WebSphereLibertyApplication",
          "metadata": {
            "name": "websphereliberty-app-sample"
          },
          "spec": {
            "applicationImage": "icr.io/appcafe/open-liberty/samples/getting-started@sha256:b99e5af298a800a7d53217be7b33797cedb1eeadc4d5cd14c0c3aafccf21f1ac",
            "expose": true,
            "license": {
              "accept": false,
              "edition": "IBM WebSphere Application Server",
              "productEntitlementSource": "Standalone"
            },
            "manageTLS": true,
            "replicas": 1,
            "serviceAccount": {
              "mountToken": true
            }
          }
        },
        {
          "apiVersion": "liberty.websphere.ibm.com/v1",
          "kind": "WebSphereLibertyDump",
          "metadata": {
            "name": "websphereliberty-dump-sample"
          },
          "spec": {
            "include": [
              "thread"
            ],
            "license": {
              "accept": false
            },
            "podName": "Specify_Pod_Name_Here"
          }
        },
        {
          "apiVersion": "liberty.websphere.ibm.com/v1",
          "kind": "WebSphereLibertyTrace",
          "metadata": {
            "name": "websphereliberty-trace-sample"
          },
          "spec": {
            "license": {
              "accept": false
            },
            "maxFileSize": 20,
            "maxFiles": 5,
            "podName": "Specify_Pod_Name_Here",
            "traceSpecification": "*=info:com.ibm.ws.webcontainer*=all"
          }
        }
      ]
    capabilities: Auto Pilot
    categories: Application Runtime
    containerImage: icr.io/cpopen/websphere-liberty-operator:daily
    createdAt: "2024-05-15T20:27:08Z"
    description: Deploy and manage containerized Liberty applications
    olm.skipRange: '>=1.0.0 <1.3.2'
    operators.openshift.io/infrastructure-features: '["disconnected"]'
    operators.operatorframework.io/builder: operator-sdk-v1.27.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/WASdev/websphere-liberty-operator
    support: IBM
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.ppc64le: supported
    operatorframework.io/arch.s390x: supported
    operatorframework.io/os.linux: supported
  name: ibm-websphere-liberty.v1.3.2
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: 'Represents the deployment of a WebSphere Liberty application.
        Documentation: For more information about installation parameters, see https://ibm.biz/wlo-crs.
        License: By installing this product, you accept the license terms at https://ibm.biz/was-license.'
      displayName: WebSphereLibertyApplication
      kind: WebSphereLibertyApplication
      name: webspherelibertyapplications.liberty.websphere.ibm.com
      resources:
      - kind: Deployment
        name: ""
        version: v1
      - kind: HorizontalPodAutoscaler
        name: ""
        version: v1
      - kind: NetworkPolicy
        name: ""
        version: v1
      - kind: Route
        name: ""
        version: v1
      - kind: Secret
        name: ""
        version: v1
      - kind: Service
        name: ""
        version: v1
      - kind: ServiceAccount
        name: ""
        version: v1
      - kind: StatefulSet
        name: ""
        version: v1
      specDescriptors:
      - description: Application image to deploy.
        displayName: Application Image
        path: applicationImage
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Required field for autoscaling. Upper limit for the number of
          pods that can be set by the autoscaler. Parameter .spec.resources.requests.cpu
          must also be specified.
        displayName: Max Replicas
        path: autoscaling.maxReplicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - displayName: License
        path: license
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Whether the Service Account token should be mounted into the
          application pods. Defaults to true.
        displayName: Mount Service Account Token
        path: serviceAccount.mountToken
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: OIDC
        path: sso.oidc
      - description: The unique ID for the provider. Default value is oidc.
        displayName: ID
        path: sso.oidc[0].id
      - description: The list of TopologySpreadConstraints for the application instance
          and if applicable, the Semeru Cloud Compiler instance.
        displayName: Constraints
        path: topologySpreadConstraints.constraints
      - description: Whether the operator should disable its default set of TopologySpreadConstraints.
          Defaults to false.
        displayName: Disable Operator Defaults
        path: topologySpreadConstraints.disableOperatorDefaults
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Name of the application. Defaults to the name of this custom
          resource.
        displayName: Application Name
        path: applicationName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Lower limit for the number of pods that can be set by the autoscaler.
        displayName: Min Replicas
        path: autoscaling.minReplicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Name of the service account to use for deploying the application.
          A service account is automatically created if this is not specified.
        displayName: Service Account Name
        path: serviceAccount.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - displayName: OAuth2
        path: sso.oauth2
      - description: Specifies a discovery endpoint URL for the OpenID Connect provider.
          Required field.
        displayName: Discovery Endpoint
        path: sso.oidc[0].discoveryEndpoint
      - description: Version of the application.
        displayName: Application Version
        path: applicationVersion
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Target average CPU utilization, represented as a percentage of
          requested CPU, over all the pods.
        displayName: Target CPU Utilization Percentage
        path: autoscaling.targetCPUUtilizationPercentage
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - displayName: GitHub
        path: sso.github
      - description: Specifies the name of the claim. Use its value as the user group
          membership.
        displayName: Group Name Attribute
        path: sso.oidc[0].groupNameAttribute
      - description: Policy for pulling container images. Defaults to IfNotPresent.
        displayName: Pull Policy
        path: pullPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:imagePullPolicy
      - description: Specifies the name of the claim. Use its value as the authenticated
          user principal.
        displayName: User Name Attribute
        path: sso.oidc[0].userNameAttribute
      - description: Specifies a callback protocol, host and port number.
        displayName: Redirect to RP Host and Port
        path: sso.redirectToRPHostAndPort
      - description: Name of the Secret to use to pull images from the specified repository.
          It is not required if the cluster is configured with a global image pull
          secret.
        displayName: Pull Secret
        path: pullSecret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: Specifies whether to map a user identifier to a registry user.
          This parameter applies to all providers.
        displayName: Map to User Registry
        path: sso.mapToUserRegistry
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The name of the social login configuration for display.
        displayName: Display Name
        path: sso.oidc[0].displayName
      - description: The service account to use for deploying the application. A service
          account is automatically created if this is not specifed.
        displayName: Service Account
        path: serviceAccount
      - description: Deprecated. .spec.serviceAccount.name should be used instead.
          If both are specified, .spec.serviceAccount.name will override this.
        displayName: Service Account Name
        path: serviceAccountName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: Specifies whether the UserInfo endpoint is contacted.
        displayName: User Info Endpoint Enabled
        path: sso.oidc[0].userInfoEndpointEnabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Create Knative resources and use Knative serving.
        displayName: Create Knative Service
        path: createKnativeService
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Specifies the name of the claim. Use its value as the subject
          realm.
        displayName: Realm Name Attribute
        path: sso.oidc[0].realmNameAttribute
      - description: Expose the application externally via a Route, a Knative Route
          or an Ingress resource.
        displayName: Expose
        path: expose
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Specifies one or more scopes to request.
        displayName: Scope
        path: sso.oidc[0].scope
      - description: Enable management of LTPA key sharing amongst Liberty containers.
          Defaults to false.
        displayName: Manage LTPA
        path: manageLTPA
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The port exposed by the container.
        displayName: Service Port
        path: service.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Specifies the required authentication method.
        displayName: Token Endpoint Auth Method
        path: sso.oidc[0].tokenEndpointAuthMethod
      - description: Enable management of TLS certificates. Defaults to true.
        displayName: Manage TLS
        path: manageTLS
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Service Type
        path: service.type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Specifies whether to enable host name verification when the client
          contacts the provider.
        displayName: Host Name Verification Enabled
        path: sso.oidc[0].hostNameVerificationEnabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Number of pods to create. Defaults to 1. Not applicable when
          .spec.autoscaling or .spec.createKnativeService is specified.
        displayName: Replicas
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Node proxies this port into your service.
        displayName: Node Port
        path: service.nodePort
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - displayName: Auto Scaling
        path: autoscaling
      - description: The name for the port exposed by the container.
        displayName: Port Name
        path: service.portName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Resource requests and limits for the application container.
        displayName: Resource Requirements
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Annotations to be added to the service.
        displayName: Service Annotations
        path: service.annotations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Annotations to be added to the service certificate.
        displayName: Annotations
        path: service.certificate.annotations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - displayName: Probes
        path: probes
      - description: The port that the operator assigns to containers inside pods.
          Defaults to the value of .spec.service.port.
        displayName: Target Port
        path: service.targetPort
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - displayName: Deployment
        path: deployment
      - description: 'A name of a secret that already contains TLS key, certificate
          and CA to be mounted in the pod. The following keys are valid in the secret:
          ca.crt, tls.crt, and tls.key.'
        displayName: Certificate Secret Reference
        path: service.certificateSecretRef
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Configure service certificate.
        displayName: Service Certificate
        path: service.certificate
      - displayName: StatefulSet
        path: statefulSet
      - displayName: Service
        path: service
      - description: An array consisting of service ports.
        displayName: Ports
        path: service.ports
      - displayName: Route
        path: route
      - description: Expose the application as a bindable service. Defaults to false.
        displayName: Bindable
        path: service.bindable
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Configures the Semeru Cloud Compiler to handle Just-In-Time (JIT)
          compilation requests from the application.
        displayName: Semeru Cloud Compiler
        path: semeruCloudCompiler
      - displayName: Network Policy
        path: networkPolicy
      - description: Specifies the strategy to replace old deployment pods with new
          pods.
        displayName: Deployment Update Strategy
        path: deployment.updateStrategy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:updateStrategy
      - displayName: Serviceability
        path: serviceability
      - displayName: Single Sign-On
        path: sso
      - displayName: Monitoring
        path: monitoring
      - description: Specifies the strategy to replace old StatefulSet pods with new
          pods.
        displayName: StatefulSet Update Strategy
        path: statefulSet.updateStrategy
      - description: An array of environment variables for the application container.
        displayName: Environment Variables
        path: env
      - displayName: Storage
        path: statefulSet.storage
      - description: List of sources to populate environment variables in the application
          container.
        displayName: Environment Variables from Sources
        path: envFrom
      - description: A convenient field to set the size of the persisted storage.
        displayName: Storage Size
        path: statefulSet.storage.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: A convenient field to request the storage class of the persisted
          storage. The name can not be specified or updated after the storage is created.
        displayName: Storage Class Name
        path: statefulSet.storage.className
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - displayName: Topology Spread Constraints
        path: topologySpreadConstraints
      - description: Represents a volume with data that is accessible to the application
          container.
        displayName: Volumes
        path: volumes
      - description: The directory inside the container where this persisted storage
          will be bound to.
        displayName: Storage Mount Path
        path: statefulSet.storage.mountPath
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Represents where to mount the volumes into the application container.
        displayName: Volume Mounts
        path: volumeMounts
      - description: List of containers to run before other containers in a pod.
        displayName: Init Containers
        path: initContainers
      - description: A YAML object that represents a volumeClaimTemplate component
          of a StatefulSet.
        displayName: Storage Volume Claim Template
        path: statefulSet.storage.volumeClaimTemplate
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:PersistentVolumeClaim
      - description: List of sidecar containers. These are additional containers to
          be added to the pods.
        displayName: Sidecar Containers
        path: sidecarContainers
      - displayName: Affinity
        path: affinity
      - description: Security context for the application container.
        displayName: Security Context
        path: securityContext
      - description: Labels to set on ServiceMonitor.
        displayName: Monitoring Labels
        path: monitoring.labels
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: A YAML snippet representing an array of Endpoint component from
          ServiceMonitor.
        displayName: Monitoring Endpoints
        path: monitoring.endpoints
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:endpointList
      - description: Controls which nodes the pod are scheduled to run on, based on
          labels on the node.
        displayName: Node Affinity
        path: affinity.nodeAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:nodeAffinity
      - description: Controls the nodes the pod are scheduled to run on, based on
          labels on the pods that are already running on the node.
        displayName: Pod Affinity
        path: affinity.podAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAffinity
      - description: Enables the ability to prevent running a pod on the same node
          as another pod.
        displayName: Pod Anti Affinity
        path: affinity.podAntiAffinity
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podAntiAffinity
      - description: A YAML object that contains a set of required labels and their
          values.
        displayName: Node Affinity Labels
        path: affinity.nodeAffinityLabels
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Annotations to be added to the Route.
        displayName: Route Annotations
        path: route.annotations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Hostname to be used for the Route.
        displayName: Route Host
        path: route.host
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Path to be used for Route.
        displayName: Route Path
        path: route.path
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Path type to be used for Ingress. This does not apply to Route
          on OpenShift.
        displayName: Path Type
        path: route.pathType
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:select:Exact
        - urn:alm:descriptor:com.tectonic.ui:select:Prefix
        - urn:alm:descriptor:com.tectonic.ui:select:ImplementationSpecific
      - description: 'A name of a secret that already contains TLS key, certificate
          and CA to be used in the route. It can also contain destination CA certificate.
          The following keys are valid in the secret: ca.crt, destCA.crt, tls.crt,
          and tls.key.'
        displayName: Certificate Secret Reference
        path: route.certificateSecretRef
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: TLS termination policy. Can be one of edge, reencrypt and passthrough.
        displayName: Termination
        path: route.termination
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:select:edge
        - urn:alm:descriptor:com.tectonic.ui:select:reencrypt
        - urn:alm:descriptor:com.tectonic.ui:select:passthrough
      - description: HTTP traffic policy with TLS enabled. Can be one of Allow, Redirect
          and None.
        displayName: Insecure Edge Termination Policy
        path: route.insecureEdgeTerminationPolicy
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:select:Allow
        - urn:alm:descriptor:com.tectonic.ui:select:Redirect
        - urn:alm:descriptor:com.tectonic.ui:select:None
      - description: Periodic probe of container liveness. Container will be restarted
          if the probe fails.
        displayName: Liveness Probe
        path: probes.liveness
      - description: Periodic probe of container service readiness. Container will
          be removed from service endpoints if the probe fails.
        displayName: Readiness Probe
        path: probes.readiness
      - description: Probe to determine successful initialization. If specified, other
          probes are not executed until this completes successfully.
        displayName: Startup Probe
        path: probes.startup
      - description: Disable the creation of the network policy. Defaults to false.
        displayName: Disable
        path: networkPolicy.disable
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Enable the Semeru Cloud Compiler. Defaults to false.
        displayName: Enable
        path: semeruCloudCompiler.enable
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Specify the labels of namespaces that incoming traffic is allowed
          from.
        displayName: Namespace Labels
        path: networkPolicy.namespaceLabels
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Number of desired pods for the Semeru Cloud Compiler. Defaults
          to 1.
        displayName: Replicas
        path: semeruCloudCompiler.replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Specify the labels of pod(s) that incoming traffic is allowed
          from.
        displayName: From Labels
        path: networkPolicy.fromLabels
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Resource requests and limits for the Semeru Cloud Compiler. The
          CPU defaults to 100m with a limit of 2000m. The memory defaults to 800Mi,
          with a limit of 1200Mi.
        displayName: Resource Requirements
        path: semeruCloudCompiler.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: 'Product edition. Defaults to IBM WebSphere Application Server.
          Other options: IBM WebSphere Application Server Liberty Core, IBM WebSphere
          Application Server Network Deployment'
        displayName: Edition
        path: license.edition
      - description: 'Entitlement source for the product. Defaults to Standalone.
          Other options: IBM Cloud Pak for Applications, IBM WebSphere Application
          Server Family Edition, IBM WebSphere Hybrid Edition'
        displayName: Product Entitlement Source
        path: license.productEntitlementSource
      - description: Deprecated. Charge metric code is now automatically determined
          based on the specified product edition and entitlement source.
        displayName: Metric
        path: license.metric
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: I represent that the software in the above-referenced application
          container includes the IBM Program referenced below and I accept the terms
          of the license agreement corresponding to the version of IBM Program in
          the application container by setting this value to true. See https://ibm.biz/was-license
          for the license agreements applicable to this IBM Program
        displayName: Accept License
        path: license.accept
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:checkbox
      - description: Determines whether the access token that is provided in the request
          is used for authentication.
        displayName: Access Token Required
        path: sso.oauth2[0].accessTokenRequired
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Determines whether to support access token authentication if
          an access token is provided in the request.
        displayName: Access Token Supported
        path: sso.oauth2[0].accessTokenSupported
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Specifies the unique ID for the provider. The default value is
          oauth2.
        displayName: ID
        path: sso.oauth2[0].id
      - description: The URL for retrieving the user information.
        displayName: User API
        path: sso.oauth2[0].userApi
      - description: Indicates which specification to use for the user API.
        displayName: User API Type
        path: sso.oauth2[0].userApiType
      - description: Hide liveness probe's Exec field
        displayName: Livness Probe's Exec
        path: probes.liveness.exec
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: Hide liveness probe's TCP Socket field
        displayName: Livness Probe's Exec
        path: probes.liveness.tcpSocket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: Hide readiness probe's Exec field
        displayName: Readiness Probe's Exec
        path: probes.readiness.exec
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: Hide readiness probe's TCP Socket field
        displayName: Readiness Probe's TCP Socket
        path: probes.readiness.tcpSocket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: Hide startup probe's Exec field
        displayName: Startup Probe's Exec
        path: probes.startup.exec
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - description: Hide startup probe's TCP Socket field
        displayName: Startup Probe's Exec
        path: probes.startup.tcpSocket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:hidden
      - displayName: Type
        path: securityContext.seccompProfile.type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:select:RuntimeDefault
        - urn:alm:descriptor:com.tectonic.ui:select:Localhost
        - urn:alm:descriptor:com.tectonic.ui:select:Unconfined
      - displayName: Localhost Profile
        path: securityContext.seccompProfile.localhostProfile
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
        - urn:alm:descriptor:com.tectonic.ui:fieldDependency:securityContext.seccompProfile.type:Localhost
      - displayName: Read-Only Root Filesystem
        path: securityContext.readOnlyRootFilesystem
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Run as Non-Root
        path: securityContext.runAsNonRoot
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Privileged
        path: securityContext.privileged
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: Allow Privilege Escalation
        path: securityContext.allowPrivilegeEscalation
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: GMSA Credential Spec Name
        path: securityContext.windowsOptions.gmsaCredentialSpecName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - displayName: GMSA Credential Spec
        path: securityContext.windowsOptions.gmsaCredentialSpec
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - displayName: Host Process
        path: securityContext.windowsOptions.hostProcess
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - displayName: SE Linux Options
        path: securityContext.seLinuxOptions
      statusDescriptors:
      - description: Exposed URI of the application endpoint
        displayName: Application
        path: endpoints[0].uri
        x-descriptors:
        - urn:alm:descriptor:org.w3:link
      - displayName: Service Binding
        path: binding
      - displayName: Status Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      - description: Service Binding Secret
        displayName: Secret
        path: binding.name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      version: v1
    - description: 'Day-2 operation for generating server dumps. Documentation: For
        more information about installation parameters, see https://ibm.biz/wlo-crs.
        License: By installing this product, you accept the license terms at https://ibm.biz/was-license.'
      displayName: WebSphereLibertyDump
      kind: WebSphereLibertyDump
      name: webspherelibertydumps.liberty.websphere.ibm.com
      specDescriptors:
      - description: License information is required.
        displayName: License
        path: license
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The license must be accepted before day-2 operations can be deployed.
          License information is available at https://ibm.biz/was-license
        displayName: Accept License
        path: license.accept
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:checkbox
      statusDescriptors:
      - description: Location of the generated dump file
        displayName: Dump File Path
        path: dumpFile
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1
    - description: 'Day-2 operation for gathering server traces. Documentation: For
        more information about installation parameters, see https://ibm.biz/wlo-crs.
        License: By installing this product, you accept the license terms at https://ibm.biz/was-license.'
      displayName: WebSphereLibertyTrace
      kind: WebSphereLibertyTrace
      name: webspherelibertytraces.liberty.websphere.ibm.com
      specDescriptors:
      - description: License information is required.
        displayName: License
        path: license
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The license must be accepted before day-2 operations can be deployed.
          License information is available at https://ibm.biz/was-license
        displayName: Accept License
        path: license.accept
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:checkbox
      version: v1
  displayName: IBM WebSphere Liberty
  description: |
    # Name
    
    IBM&reg; WebSphere&reg; Liberty
    
    # Introduction
    
    IBM WebSphere Liberty is a modern Java EE, Jakarta EE, MicroProfile runtime, ideal for building new cloud-native applications and modernizing existing applications. Liberty is highly efficient and optimized for modern cloud technologies and practices, making it an ideal choice for container and Kubernetes-based deployments.
    
    The WebSphere Liberty Operator allows you to deploy and manage containerized Liberty applications securely and easily on Red Hat OpenShift as well as other Kubernetes-based platforms in a consistent way. You can also perform Day-2 operations such as gathering traces and memory dumps easily using the operator.
    
    ## Details 
    
    Key features provided by the operator:
    
    ### Simplified license tracking
    Specify the edition and the product entitlement source for your applications and the operator will automatically add the necessary WebSphere license metadata on the deployed workloads. You can use the IBM License Service to view the aggregated license usage information for all applications.
    
    ### Integration with Certificate Managers
    The [cert-manager APIs](https://cert-manager.io/) when available on the cluster will be used to generate certificates for the application. Otherwise, on Red Hat OpenShift, the operator will generate certificates using OpenShift's Certificate Manager. The operator will automatically provision TLS certificates for applications' pods and they are automatically refreshed when the certificates are updated. Optionally, you can bring your own (BYO) certificate authority (CA) or Issuer to generate certificates to secure your applications.
    
    ### Management of Lightweight Third-Party Authentication (LTPA)
    LTPA provides a method of SSO configuration to authenticate users to access applications. The Liberty operator can generate and manage the LTPA key for applications. A single LTPA key can be used per each namespace and shared with participating microservices and applications to allow users to authenticate only once.
    
    ### Automatically restrict network communication
    Network policies are created for each application by default to limit incoming traffic to pods in the same namespace that are part of the same application. Only the ports configured by the service are allowed. The network policy can be configured to allow either namespaces and/or pods with certain labels. On OpenShift, the operator automatically configures network policy to allow traffic from ingress, when the application is exposed, and from the monitoring stack.
    
    ### Integration with Semeru Cloud Compiler
    Use a single toggle to stand up a compatible Semeru Cloud Compiler instance to handle compilation requests from the multiple instances of the same application. Liberty Operator automatically sets up encrypted communication between the compiler and the application. It also handles application upgrade scenarios gracefully to ensure compiler and application instances remain compatible.
    
    ### Exposing metrics to Prometheus
    Expose the Liberty application's metrics via the Prometheus Operator. You can pick between a basic mode, where you simply specify the label that Prometheus is watching to scrape the metrics from the container, or you can specify the full `ServiceMonitor` spec embedded into the WebSphereLibertyApplication's `.spec.monitoring` field to control configurations such as poll interval and security credentials.
    
    ### Single Sign-On (SSO)
    Liberty runtime provides capabilities to delegate authentication to external providers. Your application users can log in using their existing social media credentials from providers such as Google, Facebook, LinkedIn, Twitter, GitHub, and any OpenID Connect (OIDC) or OAuth 2.0 clients. WebSphere Liberty Operator allows you to easily configure and manage the single sign-on information for your applications.
    
    ### Easily mount logs and transaction directories
    Do you need to mount the logs and transaction data from your application to an external volume such as NFS (or any storage supported in your cluster)? Simply specify the volume size and the location to persist and the operator takes care of the rest. For example, add the following configuration into the WebSphereLibertyApplication's `.spec.storage` field :
    ``` size: 2Gi mountPath: "/logs" ```
    
    ### Service Binding
    Your runtime components can expose services by a simple toggle. We take care of the heavy lifting such as creating Kubernetes secrets with information other services can use to bind. We also keep the bindable information synchronized, so your applications can dynamically reconnect to their required services without any intervention or interruption.
    
    ### Integration with Knative (OpenShift Serverless)
    Deploy your serverless runtime component using a single toggle. The operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing the application to automatically scale to 0 when it is idle.
    
    ### Application Lifecycle
    You can deploy your Liberty application container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the operator will watch for any updates and will automatically re-deploy the new image.
    
    ### Custom RBAC
    This Operator is capable of using a custom Kubernetes service account from the caller, allowing it to follow RBAC restrictions. By default, it creates a service account if one is not specified, which can also be bound with specific roles.
    
    ### Environment Configuration
    You can configure a variety of artifacts with your deployment, such as labels, annotations, and environment variables from a ConfigMap, a Secret, or a value.
    
    ### Routing
    Expose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled. Renewed certificates are automatically made available to the Liberty server.
    
    ### High Availability via Horizontal Pod Autoscaling
    Run multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto-scaling to create (and delete) instances based on resource consumption.
    
    ### Persistence and advanced storage
    Enable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and we will create and manage that storage for you. This toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart. We offer an advanced mode where you can specify a built-in PersistentVolumeClaim, allowing you to configure many details of the persistent volume, such as its storage class and access mode. You can also easily configure and use single storage for serviceability-related day-2 operations, such as gathering server traces and dumps.
    
    ### Integration with OpenShift's Topology UI
    We set the corresponding labels to support OpenShift's Developer Topology UI, which allows you to visualize your entire set of deployments and services and how they are connected.
    
    ## Supported platforms
    
    Kubernetes platform installed on one of the following platforms:
    - Linux&reg; x86_64 (amd64)
    - Linux&reg; on IBM&reg; Z (s390x)
    - Linux&reg; on Power&reg; (ppc64le)
    
    ## Prerequisites
    
    Review the [system requirements](https://ibm.biz/wlo-sys-req) for details. 
    
    ## Resources Required
    
    Review the [resource requirements](https://ibm.biz/wlo-reqs) before you plan to install IBM WebSphere Liberty Operator.
    
    ## Storage
    
    Please see the [storage requirements](https://ibm.biz/wlo-reqs) for details.
    
    ## SecurityContextConstraints Requirements
    
    The IBM WebSphere Liberty Operator runs in the `restricted` security context constraints on OpenShift.
    
    ## Documentation
    
    See [IBM WebSphere Liberty documentation](https://ibm.biz/wlo-docs).
    
    ## Installing
    
    [Install](https://ibm.biz/wlo-install) the IBM WebSphere Liberty Operator to the desired namespace and deploy the [sample Liberty application](https://ibm.biz/wlo-deploy-sample-app) or [your custom Liberty applications](https://ibm.biz/wlo-deploy-custom-app).
    
    ## Configuration
    
    The WebSphere Liberty Operator provides various customization options to configure the application deployments. Please see the [custom resources](https://ibm.biz/wlo-crs) and [configuration examples](https://ibm.biz/wlo-config-examples) for details.
    
    ## Limitations 
    
    See the [limitations](https://ibm.biz/wlo-limits) for details.
  icon:
  - base64data: PHN2ZyBpZD0iV2Vic3BoZXJlTGliZXJ0eSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMzIgMzIiPjxkZWZzPjxsaW5lYXJHcmFkaWVudCBpZD0ia2MxZXdoeGhoYSIgeDE9IjE2IiB5MT0iMjkiIHgyPSIxNiIgeTI9IjMiIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIj48c3RvcCBvZmZzZXQ9IjAiIHN0b3AtY29sb3I9IiNmZmYiIHN0b3Atb3BhY2l0eT0iMCIvPjxzdG9wIG9mZnNldD0iLjI2IiBzdG9wLWNvbG9yPSIjZmZmIi8+PC9saW5lYXJHcmFkaWVudD48bGluZWFyR3JhZGllbnQgaWQ9InNsMGYxYWJudGIiIHgxPSIyIiB5MT0iMjIuNSIgeDI9IjMwIiB5Mj0iMjIuNSIgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiPjxzdG9wIG9mZnNldD0iLjM1IiBzdG9wLWNvbG9yPSIjZmZmIi8+PHN0b3Agb2Zmc2V0PSIuNyIvPjwvbGluZWFyR3JhZGllbnQ+PGxpbmVhckdyYWRpZW50IGlkPSJhd3JyY2JjcXJjIiB4MT0iMi40NSIgeTE9IjEyLjgzOSIgeDI9IjE2IiB5Mj0iMTIuODM5IiBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSI+PHN0b3Agb2Zmc2V0PSIwIiBzdG9wLWNvbG9yPSIjZmZmIiBzdG9wLW9wYWNpdHk9IjAiLz48c3RvcCBvZmZzZXQ9Ii44IiBzdG9wLWNvbG9yPSIjZmZmIi8+PC9saW5lYXJHcmFkaWVudD48bGluZWFyR3JhZGllbnQgaWQ9IndvcGp4c3V4NGUiIHkxPSIzMiIgeDI9IjMyIiBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSI+PHN0b3Agb2Zmc2V0PSIuMSIgc3RvcC1jb2xvcj0iI2E1NmVmZiIvPjxzdG9wIG9mZnNldD0iLjkiIHN0b3AtY29sb3I9IiMwZjYyZmUiLz48L2xpbmVhckdyYWRpZW50PjxtYXNrIGlkPSI2a3kxMnd4eDlkIiB4PSIwIiB5PSIwIiB3aWR0aD0iMzIiIGhlaWdodD0iMzIiIG1hc2tVbml0cz0idXNlclNwYWNlT25Vc2UiPjxwYXRoIHN0eWxlPSJmaWxsOnVybCgja2MxZXdoeGhoYSkiIGQ9Ik0xNSAzaDJ2MjZoLTJ6Ii8+PHBhdGggZD0iTTE2IDMwQTE0LjAxNSAxNC4wMTUgMCAwIDEgMiAxNmwxLTEgMSAxYTEyIDEyIDAgMCAwIDI0IDBoMmExNC4wMTUgMTQuMDE1IDAgMCAxLTE0IDE0eiIgc3R5bGU9ImZpbGw6dXJsKCNzbDBmMWFibnRiKSIvPjxwYXRoIGQ9Ik0xNiAyMmEyMi43NCAyMi43NCAwIDAgMS0xMy41NS00LjA4OGwxLjIxMi0xLjU5MUEyMC43MTYgMjAuNzE2IDAgMCAwIDE2IDIweiIgc3R5bGU9ImZpbGw6I2ZmZiIvPjxwYXRoIGQ9Ik0zLjY2MiAxNS42NzkgMi40NSAxNC4wODhBMjIuNzM2IDIyLjczNiAwIDAgMSAxNiAxMHYyYTIwLjcxNiAyMC43MTYgMCAwIDAtMTIuMzM4IDMuNjc5eiIgc3R5bGU9ImZpbGw6dXJsKCNhd3JyY2JjcXJjKSIvPjxwYXRoIGQ9Ik00IDE2SDJBMTQuMDA2IDE0LjAwNiAwIDAgMSAyMS44NTUgMy4yOEwyMS4wMiA1LjFBMTIuMDA4IDEyLjAwOCAwIDAgMCA0IDE2eiIgc3R5bGU9ImZpbGw6I2ZmZiIvPjwvbWFzaz48L2RlZnM+PGcgc3R5bGU9Im1hc2s6dXJsKCM2a3kxMnd4eDlkKSI+PHBhdGggc3R5bGU9ImZpbGw6dXJsKCN3b3BqeHN1eDRlKSIgZD0iTTAgMGgzMnYzMkgweiIvPjwvZz48cGF0aCBkPSJNMjcgMTRhMy42MTUgMy42MTUgMCAwIDEgLjgzMi0xLjk0NUE1LjMzNCA1LjMzNCAwIDAgMCAyOSA5aC0yYTMuNjE1IDMuNjE1IDAgMCAxLS44MzIgMS45NDVBNS4zMzQgNS4zMzQgMCAwIDAgMjUgMTR6IiBzdHlsZT0iZmlsbDojMDAxZDZjIi8+PHBhdGggZD0iTTI1IDE5YTUuMDA2IDUuMDA2IDAgMCAwIDUtNWgtMmEzIDMgMCAwIDEtNiAwYzAtMS40ODguOC0yLjUyIDEuNzM2LTMuNzE2QTguMjMxIDguMjMxIDAgMCAwIDI2IDVWNGgtMnYxYzAgMS42OTEtLjg1NCAyLjc4Ny0xLjg0MiA0LjA1NUE3LjgxMSA3LjgxMSAwIDAgMCAyMCAxNGE1LjAwNiA1LjAwNiAwIDAgMCA1IDV6TTI4LjUgMjAuMDY0YTcuMTI2IDcuMTI2IDAgMCAxLTcgMGwtMSAxLjczMWE4Ljk0MyA4Ljk0MyAwIDAgMCAzLjUgMS4xMzlWMjhoMnYtNS4wNjZhOC45NDMgOC45NDMgMCAwIDAgMy41LTEuMTM0eiIgc3R5bGU9ImZpbGw6IzAwMWQ2YyIvPjwvc3ZnPg==
    mediatype: image/svg+xml
  install:
    spec:
      deployments:
      - label:
          app.kubernetes.io/instance: websphere-liberty-operator
          app.kubernetes.io/managed-by: olm
          app.kubernetes.io/name: websphere-liberty-operator
          control-plane: controller-manager
        name: wlo-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/instance: websphere-liberty-operator
              app.kubernetes.io/managed-by: olm
              app.kubernetes.io/name: websphere-liberty-operator
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
                productChargedContainers: ALL
                productID: cb1747ecb831410f88006195f024183f
                productMetric: FREE
                productName: WebSphere Liberty Operator
              labels:
                app.kubernetes.io/instance: websphere-liberty-operator
                app.kubernetes.io/managed-by: olm
                app.kubernetes.io/name: websphere-liberty-operator
                control-plane: controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - ppc64le
                        - s390x
              containers:
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --enable-leader-election
                command:
                - /manager
                env:
                - name: OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: RELATED_IMAGE_LIBERTY_SAMPLE_APP
                  value: icr.io/appcafe/open-liberty/samples/getting-started@sha256:b99e5af298a800a7d53217be7b33797cedb1eeadc4d5cd14c0c3aafccf21f1ac
                - name: RELATED_IMAGE_WEBSPHERE_LIBERTY_OPERATOR
                  value: icr.io/cpopen/websphere-liberty-operator:daily
                image: icr.io/cpopen/websphere-liberty-operator:daily
                livenessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /healthz
                    port: 8081
                    scheme: HTTP
                  initialDelaySeconds: 90
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 10
                name: manager
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /readyz
                    port: 8081
                    scheme: HTTP
                  initialDelaySeconds: 20
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 10
                resources:
                  limits:
                    cpu: 400m
                    memory: 1Gi
                  requests:
                    cpu: 200m
                    memory: 128Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  privileged: false
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
              securityContext:
                runAsNonRoot: true
              serviceAccountName: wlo-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          - coordination.k8s.io
          resources:
          - configmaps
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - apps
          resources:
          - deployments
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments/finalizers
          - statefulsets
          verbs:
          - update
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - cert-manager.io
          resources:
          - certificates
          - issuers
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          - persistentvolumeclaims
          - secrets
          - serviceaccounts
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          - pods/exec
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - image.openshift.io
          resources:
          - imagestreams
          - imagestreamtags
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - liberty.websphere.ibm.com
          resources:
          - webspherelibertyapplications
          - webspherelibertyapplications/finalizers
          - webspherelibertyapplications/status
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - liberty.websphere.ibm.com
          resources:
          - webspherelibertydumps
          - webspherelibertydumps/finalizers
          - webspherelibertydumps/status
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - liberty.websphere.ibm.com
          resources:
          - webspherelibertytraces
          - webspherelibertytraces/finalizers
          - webspherelibertytraces/status
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          - networkpolicies
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          - roles
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - restricted
          resources:
          - securitycontextconstraints
          verbs:
          - use
        - apiGroups:
          - serving.knative.dev
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - update
          - watch
        serviceAccountName: wlo-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - WebSphere Liberty
  - MicroProfile
  - Jakarta EE
  - Java
  - Application Server
  - Application Runtime
  - Runtime
  - Spring
  - Application
  - Open Source
  - WLO
  links:
  - name: Documentation
    url: https://ibm.biz/wlo-docs
  maintainers:
  - email: support@ibm.com
    name: IBM Support
  maturity: stable
  provider:
    name: IBM
  relatedImages:
  - image: icr.io/appcafe/open-liberty/samples/getting-started@sha256:b99e5af298a800a7d53217be7b33797cedb1eeadc4d5cd14c0c3aafccf21f1ac
    name: liberty-sample-app
  - image: icr.io/cpopen/websphere-liberty-operator:daily
    name: websphere-liberty-operator
  version: 1.3.2
